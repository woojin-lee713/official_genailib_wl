[project]
name = "official_genailib_wl"
version = "1.5.0"
description = "OpenAI Chatbot Library Source Code Using OpenAI API"
authors = [
    { name = "Woo Jin Lee", email = "163913803+woojin-lee713@users.noreply.github.com" },
]
requires-python = ">=3.10"
dependencies = [
    "openai",
    "click",
    "pydantic",
    "python-dotenv",
    "requests",
    "pytest",
    "coverage[toml]",
    "nbdev",
]

[project.scripts]
genailib = "genailib_wl_folder.console:main"

[project.optional-dependencies]
test = ["coverage[toml]", "pytest", "pytest-cov", "pytest-mock"]
docs = ["nbdev", "sphinx"]

[build-system]
requires = ["setuptools>=42", "wheel", "setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["genailib_wl_folder"]
package-dir = { "" = "." }

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64", "win-64", "osx-64"]

[tool.pixi.pypi-dependencies]
official_genailib_wl = { path = ".", editable = true }

[tool.pixi.tasks]
program = "python3 genailib_wl_folder/genailib_wl_file.py"

[tool.pixi.feature.test.dependencies]
pytest = ">=7.2.0,<8.3"
pytest-cov = ">=5.0.0,<5.1"
pytest-mock = ">=3.14.0,<3.15"

[tool.pixi.feature.test.tasks]
test = "pytest --cov -m 'not e2e'"
test_e2e = "pytest --cov -m 'e2e'"

[tool.pixi.feature.py310.dependencies]
requests = ">=2.23.0,<2.33"
python = "3.10.*"
click = ">=8.1.3,<8.2"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"
click = ">=8.1.3,<8.2"
requests = ">=2.23.0,<2.33"

[tool.pixi.feature.lintformat.dependencies]
ruff = ">=0.4.5,<0.5"
pre-commit = ">=3.7.1,<3.8"

[tool.pixi.feature.lintformat.tasks]
lint = "ruff check"
format = "ruff format"

[tool.pixi.feature.typing.dependencies]
mypy = ">=0.812,<1.11"

[tool.pixi.feature.typing.tasks]
typing = "mypy ."

[tool.pixi.feature.docs.dependencies]
quarto = ">=1.4.550,<1.5"
jupyterlab = ">=1.0.10,<4.3"

[tool.pixi.feature.docs.tasks]
docs = "mkdir -p docs; cd notebooks; nbdev_docs; cp -r _docs/* ../docs/; cd .."

[tool.pixi.feature.build.dependencies]
twine = ">=3.3.0,<5.2"
build = ">=0.7.0,<0.8"

[tool.pixi.feature.build.tasks]
build = "python -m build"
publish = "python -m twine upload --repository testpypi dist/*"

[tool.pixi.environments]
default = { solve-group = "default" }
test = { features = ["test"], solve-group = "default" }
build = { features = ["build"], solve-group = "default" }
dev = { features = [
    "test",
    "lintformat",
    "typing",
    "docs",
], solve-group = "default" }
py310test = { features = ["test", "py310"], solve-group = "py310" }
py311test = { features = ["test", "py311"], solve-group = "py311" }

[tool.pixi.dependencies]
pytest = ">=8.2.2,<8.3"

[tool.pyright]
venvPath = "."
venv = ".pixi/envs/test"

[tool.pytest.ini_options]
markers = ["e2e: mark a test as an end-to-end test."]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "B", "I", "S", "ANN"]
ignore = [
    "S101",   # Ignore asserts
    "E203",   # Don't complain about whitespace before the colon
    "ANN401", # Ignore Missing or incorrect function type annotations
    "S603",   # Subprocess call with shell=True detected, which poses a security risk
]
mccabe.max-complexity = 10

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
ignore-fully-untyped = true

[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["openai", "pytest"]
ignore_missing_imports = true
